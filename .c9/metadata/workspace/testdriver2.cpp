{"filter":false,"title":"testdriver2.cpp","tooltip":"/testdriver2.cpp","undoManager":{"mark":2,"position":2,"stack":[[{"start":{"row":15,"column":35},"end":{"row":15,"column":73},"action":"remove","lines":[" //creates a list of type BasicAccount"],"id":527},{"start":{"row":17,"column":21},"end":{"row":17,"column":57},"action":"remove","lines":[" //constructs a basic acct class ba0"]},{"start":{"row":22,"column":21},"end":{"row":22,"column":22},"action":"remove","lines":[" "]},{"start":{"row":25,"column":4},"end":{"row":36,"column":4},"action":"remove","lines":["ba1.setBalance(1234);","    ","    BasicAccount ba2; ","    ba2.setAccountNum(15000);","    ba2.setName(\"Jerry\");","    ba2.setBalance(888);","    ","    BasicAccount ba3; ","    ba3.setAccountNum(20000);","    ba3.setName(\"Bob\");","    ba3.setBalance(999);","    "]},{"start":{"row":28,"column":0},"end":{"row":31,"column":61},"action":"remove","lines":["    list.append(ba2);","    list.append(ba3);","","    cout << \"-----printing all after appending all\" << endl; "]},{"start":{"row":36,"column":4},"end":{"row":36,"column":7},"action":"remove","lines":["// "]},{"start":{"row":37,"column":0},"end":{"row":46,"column":20},"action":"remove","lines":["    float a = list.find(ba1)->data.getAccountNum();","    float b = list.find(ba1)->data.getBalance();","    cout << \"--ba1's account is: \"<< a << endl; ","    cout << \"--ba1's balance is: \"<< b << endl; ","    cout << \"----printing from ba2\"<< endl; ","    list.printAll(list.find(ba2));","","","    cout << \"----erasing ba0 and printing all\" << endl;","    list.erase(ba0);"]}],[{"start":{"row":0,"column":0},"end":{"row":43,"column":0},"action":"remove","lines":["/* File: testdriver2.cpp"," * Name: Paulo Lemus"," * Date: 2/24/2017"," */","","#include <iostream>","#include \"singlylinked.h\"","#include \"BasicAccount.h\"","using std::cin;","using std::cout;","using std::endl;","","","int main(){","","    SLinkedList<BasicAccount> list;","","    BasicAccount ba0;","    ba0.setAccountNum(500);","    ba0.setName(\"Alice\");","    ba0.setBalance(400);","","    BasicAccount ba1;","    ba1.setAccountNum(10000);","    ba1.setName(\"Tom\");","    ","    list.append(ba0);","    list.append(ba1);","","    list.printAll();","","    /* Here is an example of how to use the find","     * function and how to use it to interact with","     * a bankAccount in the list.","     * Kind of dumb right now, I know.","     */","    list.find(ba1)->data.setBalance(1234);","","    list.printAll();","","    cout << \"Success!\" << endl;","    return 0;","}",""],"id":528},{"start":{"row":0,"column":0},"end":{"row":42,"column":1},"action":"insert","lines":["/* File: testdriver2.cpp"," * Name: Paulo Lemus"," * Date: 2/24/2017"," */","","#include <iostream>","#include \"singlylinked.h\"","#include \"BasicAccount.h\"","using std::cin;","using std::cout;","using std::endl;","","","int main(){","","    SLinkedList<BasicAccount> list;","","    BasicAccount ba0;","    ba0.setAccountNum(500);","    ba0.setName(\"Alice\");","    ba0.setBalance(400);","","    BasicAccount ba1;","    ba1.setAccountNum(10000);","    ba1.setName(\"Tom\");","    ","    list.append(ba0);","    list.append(ba1);","","    list.printAll();","","    /* Here is an example of how to use the find","     * function and how to use it to interact with","     * a bankAccount in the list.","     * Kind of dumb right now, I know.","     */","    list.find(ba1)->data.setBalance(1234);","","    list.printAll();","","    cout << \"Success!\" << endl;","    return 0;","}"]}],[{"start":{"row":42,"column":1},"end":{"row":43,"column":0},"action":"insert","lines":["",""],"id":529,"ignore":true}]]},"ace":{"folds":[],"scrolltop":165,"scrollleft":0,"selection":{"start":{"row":29,"column":4},"end":{"row":29,"column":20},"isBackwards":true},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":13,"state":"start","mode":"ace/mode/c_cpp"}},"timestamp":1488092554054,"hash":"cf249e3810ae27a35e09f9a766e4a6ed4b628e18"}